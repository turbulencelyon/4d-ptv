function [matches,rays_info,params] = h52matches_v2(filepath,NbFrames, minFrame,nCam)

% Generates matches array from .h5 file generated by "STM.cpp or stm_hdf5.py"
%% /!\ 2 version of STM.cpp exist and the file are not ordered the same way.
% For this reason you have to choose the version that correspond to yours
% in order to see the matches.
% If you've made the computation after 05/2020, it's the version 2, before
% it's the version 1 (ex: Ra1.51e10_dense_1)
% -----------------------------------------------------------------------
% INPUT
% filepath : path to .h5 file (without .h5)
% NbFrames : number of frame within the file
% minFrame : number of the first frame (default = 1)
% nCam : total number of cameras
% -----------------------------------------------------------------------
% OUTPUT
% matches   : array provided by STM
% matches(:,0)) : frame number
% matches(:,1)) : x position
% matches(:,2)) : y position
% matches(:,3)) : z position
% matches(:,4)) : matching error
% 
% rays_info : Nframes x (nCam*2+1) matrix with columns: 
% [NumberOfRaysUsedInMatch, camXID, rayXID, camYID, rayYID, ...]
% 0 means that the point was matched without using less than nCam.
%
% params : 7*1 struct array containing : maxframes, mincameras, maxdistance,
% maxmatches, nx, ny, nz
% -----------------------------------------------------------------------
% 01/2025 - Hugo PRADEL, from David Dumont
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

if ~exist('minFrame','var')
    minFrame = 1;
end

if ~exist('Version','var')
    Version='V2';
end

%% New version
% Lecture of tracks
if strcmp(Version,'V2')
    matches=[];
    rays_info=[];
    filename = sprintf('%s.h5',filepath)
    params=h5info(filename).Attributes;
    for i=minFrame:NbFrames+minFrame
        dataset=sprintf('/frame%d_xyze',i); % matching pos and error
        data = h5read(filename,dataset);
        rays_dataset=sprintf('/frame%d_camrayids',i); % cam id and ray id used in matching
        rays_data = h5read(filename,rays_dataset);
        
        if size(rays_data,2)<nCam*2 %if there is less than nCam rays
            rays_data = cat(2,rays_data,-ones(size(rays_data,1),nCam*2-size(rays_data,2))); %fill the array with -1
        end 

        if i==1
            matches = cat(2,ones(size(data,1),1)*(i+minFrame-1),data);
            rays_info = cat(2,nCam-sum(rays_data==-1,2)/2,rays_data);
        else
            matches1 = cat(2,ones(size(data,1),1)*(i+minFrame-1),data);
            matches=cat(1,matches,matches1);
            rays_info_1 = cat(2,nCam-sum(rays_data==-1,2)/2,rays_data);
            rays_info=cat(1,rays_info,rays_info_1);
        end
    end
end

rays_info(rays_info==-1)=0; % change -1 to 0 so it matches the output of readMatches function

%% Old version
if strcmp(Version,'V1')
    filename = sprintf('%s.h5',filepath)

% Lecture of tracks
    matches = h5read(filename,'/tracks');
end 

end
